@page "/CreatePoll"
@using Data.Polls
@using Models.Polls

@inject IPollRepository PollRepository
@inject NavigationManager NavigationManager

<div class="jumbotron p-4 mb-4">
    <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" class="form-control" @bind="NewPoll.Name" />
    </div>
    <div class="form-group">
        <label for="source">Description:</label>
        <textarea class="form-control" @bind="NewPoll.Description" />
    </div>

    <div class="row justify-content-around">
        <button class="btn btn-success" @onclick="ValidSubmit">Save Changes</button>
        <button class="btn btn-info" @onclick="AddQuestion">Add Question</button>
        <button class="btn btn-danger" @onclick="BackToList">Cancel</button>
    </div>
</div>

@for (int qNum = 0; qNum < NewPoll.Questions.Count; qNum++)
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-subtitle">@(qNum + 1). @NewPoll.Questions[qNum].Text</h5>
            <div class="form-group">
                @for (int aNum = 0; aNum < NewPoll.Questions[qNum].PossibleAnswers.Count; aNum++)
                {
                    <input type="text" class="form-control" @bind="NewPoll.Questions[qNum].PossibleAnswers[aNum]"/>
                    @*<a class="list-group-item list-group-item-action">@answer</a>*@
                }
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-info">AddAnswer</button>
        </div>
    </div>
}

@if (NewPoll.Questions.Count > 6)
{
    <div class="jumbotron p-4 my-4">
        <div class="row justify-content-around">
            <button class="btn btn-success" @onclick="ValidSubmit">Save Changes</button>
            <button class="btn btn-info" @onclick="AddQuestion">Add Question</button>
            <button class="btn btn-danger" @onclick="BackToList">Cancel</button>
        </div>
    </div>
}

@code {
    public Poll NewPoll { get; set; }

    protected override void OnInitialized()
    {
        NewPoll = new Poll();
    }

    void AddQuestion()
    {
        NewPoll.Questions.Add(new Question("Example", true, new List<string> { "1", "2", "3" }));
    }

    //void AddAnswer(int questionNum)
    //{
    //    NewPoll.Questions[questionNum].PossibleAnswers.Add("...");
    //    return 
    //}

    void BackToList()
    {
        NavigationManager.NavigateTo("/");
    }

    void ValidSubmit()
    {
        PollRepository.Add(NewPoll);
        BackToList();
    }
}
